/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CompanyWhereUniqueInput } from "../../company/base/CompanyWhereUniqueInput";
import {
  ValidateNested,
  IsOptional,
  IsBoolean,
  IsString,
  IsDate,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { EquidevWhereUniqueInput } from "../../equidev/base/EquidevWhereUniqueInput";
import { TaskPlannerWhereUniqueInput } from "../../taskPlanner/base/TaskPlannerWhereUniqueInput";
import { EnumTicketTicketStatus } from "./EnumTicketTicketStatus";
@InputType()
class TicketUpdateInput {
  @ApiProperty({
    required: false,
    type: () => CompanyWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CompanyWhereUniqueInput)
  @IsOptional()
  @Field(() => CompanyWhereUniqueInput, {
    nullable: true,
  })
  companyId?: CompanyWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => EquidevWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => EquidevWhereUniqueInput)
  @IsOptional()
  @Field(() => EquidevWhereUniqueInput, {
    nullable: true,
  })
  equipmentId?: EquidevWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isPrimeCustomer?: boolean | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  nameOfCustomer?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  nameOfEquipment?: string;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  requisitionDate?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  requisitionDetails?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  requisitionType?: string | null;

  @ApiProperty({
    required: false,
    type: () => TaskPlannerWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TaskPlannerWhereUniqueInput)
  @IsOptional()
  @Field(() => TaskPlannerWhereUniqueInput, {
    nullable: true,
  })
  taskPlanners?: TaskPlannerWhereUniqueInput;

  @ApiProperty({
    required: false,
    enum: EnumTicketTicketStatus,
  })
  @IsEnum(EnumTicketTicketStatus)
  @IsOptional()
  @Field(() => EnumTicketTicketStatus, {
    nullable: true,
  })
  ticketStatus?: "Done" | "Open" | "Closed" | null;
}
export { TicketUpdateInput };
