/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsDate, IsOptional, ValidateNested, IsString } from "class-validator";
import { Type } from "class-transformer";
import { CompanyWhereUniqueInput } from "../../company/base/CompanyWhereUniqueInput";
import { EmployeeCreateNestedManyWithoutInstallationsInput } from "./EmployeeCreateNestedManyWithoutInstallationsInput";
import { EquidevWhereUniqueInput } from "../../equidev/base/EquidevWhereUniqueInput";
@InputType()
class InstallationCreateInput {
  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  commissionDate?: Date | null;

  @ApiProperty({
    required: true,
    type: () => CompanyWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CompanyWhereUniqueInput)
  @Field(() => CompanyWhereUniqueInput)
  companyId!: CompanyWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => EmployeeCreateNestedManyWithoutInstallationsInput,
  })
  @ValidateNested()
  @Type(() => EmployeeCreateNestedManyWithoutInstallationsInput)
  @IsOptional()
  @Field(() => EmployeeCreateNestedManyWithoutInstallationsInput, {
    nullable: true,
  })
  employeeId?: EmployeeCreateNestedManyWithoutInstallationsInput;

  @ApiProperty({
    required: false,
    type: () => EquidevWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => EquidevWhereUniqueInput)
  @IsOptional()
  @Field(() => EquidevWhereUniqueInput, {
    nullable: true,
  })
  equipmentId?: EquidevWhereUniqueInput | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  installationStartDate!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  nameOfCompanyEqInstalled!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  nameOfTechnicalEngineerInstalled!: string;
}
export { InstallationCreateInput };
