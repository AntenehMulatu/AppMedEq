/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsNumber,
  ValidateNested,
} from "class-validator";
import { CompanyTypeWhereUniqueInput } from "../../companyType/base/CompanyTypeWhereUniqueInput";
import { Type } from "class-transformer";
import { EmployeeUpdateManyWithoutCompaniesInput } from "./EmployeeUpdateManyWithoutCompaniesInput";
import { EquidevUpdateManyWithoutCompaniesInput } from "./EquidevUpdateManyWithoutCompaniesInput";
import { EquipmentSaleUpdateManyWithoutCompaniesInput } from "./EquipmentSaleUpdateManyWithoutCompaniesInput";
import { InstallationUpdateManyWithoutCompaniesInput } from "./InstallationUpdateManyWithoutCompaniesInput";
import { MaintRepairUpdateManyWithoutCompaniesInput } from "./MaintRepairUpdateManyWithoutCompaniesInput";
import { SparePartUpdateManyWithoutCompaniesInput } from "./SparePartUpdateManyWithoutCompaniesInput";
import { TicketUpdateManyWithoutCompaniesInput } from "./TicketUpdateManyWithoutCompaniesInput";
@InputType()
class CompanyUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  companyAddress?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  companyDepartment?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  companyName?: string;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  companyPhone?: number;

  @ApiProperty({
    required: false,
    type: () => CompanyTypeWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CompanyTypeWhereUniqueInput)
  @IsOptional()
  @Field(() => CompanyTypeWhereUniqueInput, {
    nullable: true,
  })
  companyType?: CompanyTypeWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => EmployeeUpdateManyWithoutCompaniesInput,
  })
  @ValidateNested()
  @Type(() => EmployeeUpdateManyWithoutCompaniesInput)
  @IsOptional()
  @Field(() => EmployeeUpdateManyWithoutCompaniesInput, {
    nullable: true,
  })
  employees?: EmployeeUpdateManyWithoutCompaniesInput;

  @ApiProperty({
    required: false,
    type: () => EquidevUpdateManyWithoutCompaniesInput,
  })
  @ValidateNested()
  @Type(() => EquidevUpdateManyWithoutCompaniesInput)
  @IsOptional()
  @Field(() => EquidevUpdateManyWithoutCompaniesInput, {
    nullable: true,
  })
  equipments?: EquidevUpdateManyWithoutCompaniesInput;

  @ApiProperty({
    required: false,
    type: () => EquipmentSaleUpdateManyWithoutCompaniesInput,
  })
  @ValidateNested()
  @Type(() => EquipmentSaleUpdateManyWithoutCompaniesInput)
  @IsOptional()
  @Field(() => EquipmentSaleUpdateManyWithoutCompaniesInput, {
    nullable: true,
  })
  equipmentSales?: EquipmentSaleUpdateManyWithoutCompaniesInput;

  @ApiProperty({
    required: false,
    type: () => InstallationUpdateManyWithoutCompaniesInput,
  })
  @ValidateNested()
  @Type(() => InstallationUpdateManyWithoutCompaniesInput)
  @IsOptional()
  @Field(() => InstallationUpdateManyWithoutCompaniesInput, {
    nullable: true,
  })
  installations?: InstallationUpdateManyWithoutCompaniesInput;

  @ApiProperty({
    required: false,
    type: () => MaintRepairUpdateManyWithoutCompaniesInput,
  })
  @ValidateNested()
  @Type(() => MaintRepairUpdateManyWithoutCompaniesInput)
  @IsOptional()
  @Field(() => MaintRepairUpdateManyWithoutCompaniesInput, {
    nullable: true,
  })
  maintRepairs?: MaintRepairUpdateManyWithoutCompaniesInput;

  @ApiProperty({
    required: false,
    type: () => SparePartUpdateManyWithoutCompaniesInput,
  })
  @ValidateNested()
  @Type(() => SparePartUpdateManyWithoutCompaniesInput)
  @IsOptional()
  @Field(() => SparePartUpdateManyWithoutCompaniesInput, {
    nullable: true,
  })
  spareParts?: SparePartUpdateManyWithoutCompaniesInput;

  @ApiProperty({
    required: false,
    type: () => TicketUpdateManyWithoutCompaniesInput,
  })
  @ValidateNested()
  @Type(() => TicketUpdateManyWithoutCompaniesInput)
  @IsOptional()
  @Field(() => TicketUpdateManyWithoutCompaniesInput, {
    nullable: true,
  })
  tickets?: TicketUpdateManyWithoutCompaniesInput;
}
export { CompanyUpdateInput };
