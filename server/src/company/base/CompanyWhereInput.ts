/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, IsEnum, ValidateNested } from "class-validator";
import { StringFilter } from "../../util/StringFilter";
import { FloatFilter } from "../../util/FloatFilter";
import { EnumCompanyCompanyType } from "./EnumCompanyCompanyType";
import { EmployeeListRelationFilter } from "../../employee/base/EmployeeListRelationFilter";
import { EquidevListRelationFilter } from "../../equidev/base/EquidevListRelationFilter";
import { EquipmentSaleListRelationFilter } from "../../equipmentSale/base/EquipmentSaleListRelationFilter";
import { InstallationListRelationFilter } from "../../installation/base/InstallationListRelationFilter";
import { MaintRepairListRelationFilter } from "../../maintRepair/base/MaintRepairListRelationFilter";
import { SparePartListRelationFilter } from "../../sparePart/base/SparePartListRelationFilter";
import { TicketListRelationFilter } from "../../ticket/base/TicketListRelationFilter";
@InputType()
class CompanyWhereInput {
  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  companyAddress?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  companyDepartment?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  companyName?: StringFilter;

  @ApiProperty({
    required: false,
    type: FloatFilter,
  })
  @Type(() => FloatFilter)
  @IsOptional()
  @Field(() => FloatFilter, {
    nullable: true,
  })
  companyPhone?: FloatFilter;

  @ApiProperty({
    required: false,
    enum: EnumCompanyCompanyType,
  })
  @IsEnum(EnumCompanyCompanyType)
  @IsOptional()
  @Field(() => EnumCompanyCompanyType, {
    nullable: true,
  })
  companyType?: "Customer" | "Supplier" | "Institution";

  @ApiProperty({
    required: false,
    type: () => EmployeeListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EmployeeListRelationFilter)
  @IsOptional()
  @Field(() => EmployeeListRelationFilter, {
    nullable: true,
  })
  employees?: EmployeeListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => EquidevListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EquidevListRelationFilter)
  @IsOptional()
  @Field(() => EquidevListRelationFilter, {
    nullable: true,
  })
  equipments?: EquidevListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => EquipmentSaleListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EquipmentSaleListRelationFilter)
  @IsOptional()
  @Field(() => EquipmentSaleListRelationFilter, {
    nullable: true,
  })
  equipmentSales?: EquipmentSaleListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => InstallationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => InstallationListRelationFilter)
  @IsOptional()
  @Field(() => InstallationListRelationFilter, {
    nullable: true,
  })
  installations?: InstallationListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => MaintRepairListRelationFilter,
  })
  @ValidateNested()
  @Type(() => MaintRepairListRelationFilter)
  @IsOptional()
  @Field(() => MaintRepairListRelationFilter, {
    nullable: true,
  })
  maintRepairs?: MaintRepairListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => SparePartListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SparePartListRelationFilter)
  @IsOptional()
  @Field(() => SparePartListRelationFilter, {
    nullable: true,
  })
  spareParts?: SparePartListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TicketListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TicketListRelationFilter)
  @IsOptional()
  @Field(() => TicketListRelationFilter, {
    nullable: true,
  })
  tickets?: TicketListRelationFilter;
}
export { CompanyWhereInput };
