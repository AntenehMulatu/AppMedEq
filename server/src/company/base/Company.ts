/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsNumber,
  ValidateNested,
  IsDate,
} from "class-validator";
import { CompanyType } from "../../companyType/base/CompanyType";
import { Type } from "class-transformer";
import { Employee } from "../../employee/base/Employee";
import { Equidev } from "../../equidev/base/Equidev";
import { EquipmentSale } from "../../equipmentSale/base/EquipmentSale";
import { Installation } from "../../installation/base/Installation";
import { MaintRepair } from "../../maintRepair/base/MaintRepair";
import { SparePart } from "../../sparePart/base/SparePart";
import { Ticket } from "../../ticket/base/Ticket";
@ObjectType()
class Company {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  companyAddress!: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  companyDepartment!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  companyName!: string;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Field(() => Number)
  companyPhone!: number;

  @ApiProperty({
    required: false,
    type: () => CompanyType,
  })
  @ValidateNested()
  @Type(() => CompanyType)
  @IsOptional()
  companyType?: CompanyType | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: () => [Employee],
  })
  @ValidateNested()
  @Type(() => Employee)
  @IsOptional()
  employees?: Array<Employee>;

  @ApiProperty({
    required: false,
    type: () => [Equidev],
  })
  @ValidateNested()
  @Type(() => Equidev)
  @IsOptional()
  equipments?: Array<Equidev>;

  @ApiProperty({
    required: false,
    type: () => [EquipmentSale],
  })
  @ValidateNested()
  @Type(() => EquipmentSale)
  @IsOptional()
  equipmentSales?: Array<EquipmentSale>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: () => [Installation],
  })
  @ValidateNested()
  @Type(() => Installation)
  @IsOptional()
  installations?: Array<Installation>;

  @ApiProperty({
    required: false,
    type: () => [MaintRepair],
  })
  @ValidateNested()
  @Type(() => MaintRepair)
  @IsOptional()
  maintRepairs?: Array<MaintRepair>;

  @ApiProperty({
    required: false,
    type: () => [SparePart],
  })
  @ValidateNested()
  @Type(() => SparePart)
  @IsOptional()
  spareParts?: Array<SparePart>;

  @ApiProperty({
    required: false,
    type: () => [Ticket],
  })
  @ValidateNested()
  @Type(() => Ticket)
  @IsOptional()
  tickets?: Array<Ticket>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}
export { Company };
