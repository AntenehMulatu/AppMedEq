/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CompanyWhereUniqueInput } from "../../company/base/CompanyWhereUniqueInput";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { IntFilter } from "../../util/IntFilter";
import { EquipmentSaleListRelationFilter } from "../../equipmentSale/base/EquipmentSaleListRelationFilter";
import { InstallationListRelationFilter } from "../../installation/base/InstallationListRelationFilter";
import { MaintRepairListRelationFilter } from "../../maintRepair/base/MaintRepairListRelationFilter";
import { TaskPlannerListRelationFilter } from "../../taskPlanner/base/TaskPlannerListRelationFilter";
@InputType()
class EmployeeWhereInput {
  @ApiProperty({
    required: false,
    type: () => CompanyWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CompanyWhereUniqueInput)
  @IsOptional()
  @Field(() => CompanyWhereUniqueInput, {
    nullable: true,
  })
  companyId?: CompanyWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  employeeAge?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  employeeDepartment?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  employeeEmail?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  employeeName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  employeePhone?: IntFilter;

  @ApiProperty({
    required: false,
    type: () => EquipmentSaleListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EquipmentSaleListRelationFilter)
  @IsOptional()
  @Field(() => EquipmentSaleListRelationFilter, {
    nullable: true,
  })
  equipmentSales?: EquipmentSaleListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => InstallationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => InstallationListRelationFilter)
  @IsOptional()
  @Field(() => InstallationListRelationFilter, {
    nullable: true,
  })
  installations?: InstallationListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => MaintRepairListRelationFilter,
  })
  @ValidateNested()
  @Type(() => MaintRepairListRelationFilter)
  @IsOptional()
  @Field(() => MaintRepairListRelationFilter, {
    nullable: true,
  })
  maintRepairs?: MaintRepairListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TaskPlannerListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TaskPlannerListRelationFilter)
  @IsOptional()
  @Field(() => TaskPlannerListRelationFilter, {
    nullable: true,
  })
  taskPlanners?: TaskPlannerListRelationFilter;
}
export { EmployeeWhereInput };
