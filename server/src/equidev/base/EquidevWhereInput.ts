/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CompanyWhereUniqueInput } from "../../company/base/CompanyWhereUniqueInput";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { EquipmentSaleWhereUniqueInput } from "../../equipmentSale/base/EquipmentSaleWhereUniqueInput";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { InstallationWhereUniqueInput } from "../../installation/base/InstallationWhereUniqueInput";
import { MaintRepairWhereUniqueInput } from "../../maintRepair/base/MaintRepairWhereUniqueInput";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { SparePartListRelationFilter } from "../../sparePart/base/SparePartListRelationFilter";
import { TicketListRelationFilter } from "../../ticket/base/TicketListRelationFilter";
@InputType()
class EquidevWhereInput {
  @ApiProperty({
    required: false,
    type: () => CompanyWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CompanyWhereUniqueInput)
  @IsOptional()
  @Field(() => CompanyWhereUniqueInput, {
    nullable: true,
  })
  companyId?: CompanyWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  countryOfOrign?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => EquipmentSaleWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => EquipmentSaleWhereUniqueInput)
  @IsOptional()
  @Field(() => EquipmentSaleWhereUniqueInput, {
    nullable: true,
  })
  equipmentSales?: EquipmentSaleWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  hasSparePart?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => InstallationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => InstallationWhereUniqueInput)
  @IsOptional()
  @Field(() => InstallationWhereUniqueInput, {
    nullable: true,
  })
  installations?: InstallationWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => MaintRepairWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => MaintRepairWhereUniqueInput)
  @IsOptional()
  @Field(() => MaintRepairWhereUniqueInput, {
    nullable: true,
  })
  maintRepairs?: MaintRepairWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  manufacturerName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  model?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  serialNumber?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  shipmentArrivalDate?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: () => SparePartListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SparePartListRelationFilter)
  @IsOptional()
  @Field(() => SparePartListRelationFilter, {
    nullable: true,
  })
  spareParts?: SparePartListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TicketListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TicketListRelationFilter)
  @IsOptional()
  @Field(() => TicketListRelationFilter, {
    nullable: true,
  })
  tickets?: TicketListRelationFilter;
}
export { EquidevWhereInput };
