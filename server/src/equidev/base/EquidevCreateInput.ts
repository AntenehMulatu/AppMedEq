/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CompanyWhereUniqueInput } from "../../company/base/CompanyWhereUniqueInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  IsBoolean,
  IsDate,
} from "class-validator";
import { Type } from "class-transformer";
import { EquipmentSaleWhereUniqueInput } from "../../equipmentSale/base/EquipmentSaleWhereUniqueInput";
import { InstallationWhereUniqueInput } from "../../installation/base/InstallationWhereUniqueInput";
import { MaintRepairCreateNestedManyWithoutEquidevsInput } from "./MaintRepairCreateNestedManyWithoutEquidevsInput";
import { SparePartCreateNestedManyWithoutEquidevsInput } from "./SparePartCreateNestedManyWithoutEquidevsInput";
import { TicketCreateNestedManyWithoutEquidevsInput } from "./TicketCreateNestedManyWithoutEquidevsInput";
@InputType()
class EquidevCreateInput {
  @ApiProperty({
    required: false,
    type: () => CompanyWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CompanyWhereUniqueInput)
  @IsOptional()
  @Field(() => CompanyWhereUniqueInput, {
    nullable: true,
  })
  companyId?: CompanyWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  countryOfOrign?: string | null;

  @ApiProperty({
    required: false,
    type: () => EquipmentSaleWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => EquipmentSaleWhereUniqueInput)
  @IsOptional()
  @Field(() => EquipmentSaleWhereUniqueInput, {
    nullable: true,
  })
  equipmentSales?: EquipmentSaleWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  hasSparePart?: boolean | null;

  @ApiProperty({
    required: false,
    type: () => InstallationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => InstallationWhereUniqueInput)
  @IsOptional()
  @Field(() => InstallationWhereUniqueInput, {
    nullable: true,
  })
  installations?: InstallationWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => MaintRepairCreateNestedManyWithoutEquidevsInput,
  })
  @ValidateNested()
  @Type(() => MaintRepairCreateNestedManyWithoutEquidevsInput)
  @IsOptional()
  @Field(() => MaintRepairCreateNestedManyWithoutEquidevsInput, {
    nullable: true,
  })
  maintRepairs?: MaintRepairCreateNestedManyWithoutEquidevsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  manufacturerName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  model?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  serialNumber?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  shipmentArrivalDate?: Date | null;

  @ApiProperty({
    required: false,
    type: () => SparePartCreateNestedManyWithoutEquidevsInput,
  })
  @ValidateNested()
  @Type(() => SparePartCreateNestedManyWithoutEquidevsInput)
  @IsOptional()
  @Field(() => SparePartCreateNestedManyWithoutEquidevsInput, {
    nullable: true,
  })
  spareParts?: SparePartCreateNestedManyWithoutEquidevsInput;

  @ApiProperty({
    required: false,
    type: () => TicketCreateNestedManyWithoutEquidevsInput,
  })
  @ValidateNested()
  @Type(() => TicketCreateNestedManyWithoutEquidevsInput)
  @IsOptional()
  @Field(() => TicketCreateNestedManyWithoutEquidevsInput, {
    nullable: true,
  })
  tickets?: TicketCreateNestedManyWithoutEquidevsInput;
}
export { EquidevCreateInput };
