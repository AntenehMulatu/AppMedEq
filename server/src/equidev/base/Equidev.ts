/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { Company } from "../../company/base/Company";
import {
  ValidateNested,
  IsOptional,
  IsString,
  IsDate,
  IsBoolean,
} from "class-validator";
import { Type } from "class-transformer";
import { EquipmentSale } from "../../equipmentSale/base/EquipmentSale";
import { Installation } from "../../installation/base/Installation";
import { MaintRepair } from "../../maintRepair/base/MaintRepair";
import { SparePart } from "../../sparePart/base/SparePart";
import { Ticket } from "../../ticket/base/Ticket";
@ObjectType()
class Equidev {
  @ApiProperty({
    required: false,
    type: () => Company,
  })
  @ValidateNested()
  @Type(() => Company)
  @IsOptional()
  companyId?: Company | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  countryOfOrign!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: () => EquipmentSale,
  })
  @ValidateNested()
  @Type(() => EquipmentSale)
  @IsOptional()
  equipmentSales?: EquipmentSale | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  hasSparePart!: boolean | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: () => Installation,
  })
  @ValidateNested()
  @Type(() => Installation)
  @IsOptional()
  installations?: Installation;

  @ApiProperty({
    required: false,
    type: () => [MaintRepair],
  })
  @ValidateNested()
  @Type(() => MaintRepair)
  @IsOptional()
  maintRepairs?: Array<MaintRepair>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  manufacturerName!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  model!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  serialNumber!: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  shipmentArrivalDate!: Date | null;

  @ApiProperty({
    required: false,
    type: () => [SparePart],
  })
  @ValidateNested()
  @Type(() => SparePart)
  @IsOptional()
  spareParts?: Array<SparePart>;

  @ApiProperty({
    required: false,
    type: () => [Ticket],
  })
  @ValidateNested()
  @Type(() => Ticket)
  @IsOptional()
  tickets?: Array<Ticket>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}
export { Equidev };
